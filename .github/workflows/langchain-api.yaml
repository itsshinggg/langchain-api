name: Deploy and Configure Nginx on EC2

on:
  push:
    branches:
      - main

jobs:
  deploy-and-configure-nginx:
    name: Deploy and Configure Nginx
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Deploy to Server 1
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}

      - name: Execute remote SSH commands using SSH key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Python, venv, git, and other dependencies
            sudo apt update 
            sudo apt install -y python3 python3-venv git
            sudo git clone https://github.com/itsshinggg/langchain-api.git
            cd langchain-api
            sudo python -m venv rag-venv
            source rag-venv/bin/activate
            sudo chown -R ubuntu:ubuntu /home/ubuntu/langchain-api
            pip install -r requirements.txt
            sudo bash -c 'echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env'

            # Install Nginx if not already installed
            sudo apt-get update
            sudo apt-get install -y nginx

            # Configure Nginx
            echo '
            server {
                server_name ${{ secrets.URL }};

                location /gpt {
                    proxy_pass http://${{ secrets.URL }}:${{ secrets.PORT }};
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }
            ' | sudo tee /etc/nginx/sites-available/default
            sudo systemctl reload nginx

            # Verify Nginx configuration and reload (uncomment the section below to obtain SSL with new server)
            # sudo snap install core; sudo snap refresh core
            # sudo apt remove certbot 
            # sudo snap install --classic certbot
            # sudo ln -s /snap/bin/certbot /usr/bin/certbot
            # sudo systemctl reload nginx
            # sudo certbot --nginx -d ${{secrets.URL}} 
            # sudo systemctl status snap.certbot.renew.service 

            # Start univorn
            python3 -m uvicorn main:app --host 0.0.0.0 --port ${{ secrets.PORT }}
